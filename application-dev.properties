server.profile=dev
server.servlet.context-path=/
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost/test?useUnicode=true&characterEncoding=utf-8&useSSL=true&serverTimezone=GMT%2B8
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#搜索实体类包别名
mybatis.type-aliases-package=com.don.model
#配置mapper的扫描，找到哦啊所有的mapper.xml映射文件
mybatis.mapper-locations=classpath:mapper/*Mapper.xml
# 配置eureka的注册中心地址
eureka.client.service-url.defaultZone=http://eureka1:7001/eureka,http://eureka2:7002/eureka,http://eureka3:7003/eureka

# 配置当鼠标悬浮否一个provider的时候，显示的不是localhost，直接显示ip地址
eureka.instance.prefer-ip-address=true
# 这个时候发现了其实eureka所显示的provider都是一个a标签，但是点进去之后会报错404(这个时候也是springcloud所给程序员提供的一种便利)
# 当点击a标签的时候，显示的就是provider的开发者，公司名称，provider所提供的功能，provider下所有controller以及调用方法
# info开头--->剩下的信息你可以随意去编写
# 如果想要让以下信息生效，就必须要添加jar包(必须要添加actuator的jar包)
info.author.name=Don
info.company.name=Don company
info.project.description=EurekaCenter
# 以后consumer就不会再通过ip地址来访问provider了，有了eureka之后，会通过eureka的Application的值来进行访问
spring.application.name=book-interface
# 失效eureka的自我保护机制
# 配置自己向eureka去发送心跳的时间(单位是秒)
eureka.instance.lease-renewal-interval-in-seconds=5
# 配置在eureka最后一次接收到心跳往后数几秒进行剔除
eureka.instance.lease-expiration-duration-in-seconds=8
# 关于zipkin的配置
spring.zipkin.base-url=http://localhost:8095
# 配置链式采集样率
spring.sleuth.sampler.probability=1.0